{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","onSubmit","event","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","setNweets","onSnapshot","snapshot","nweetArray","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a00c1ccb.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nexport default ({refreshUser,userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n        \r\n    };\r\n    const onChange= (event) =>{\r\n        const{target:{value}}=event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n          .collection(\"nweets\")\r\n          .where(\"creatorId\",\"==\",userObj.uid)\r\n          .orderBy(\"createdAt\")\r\n          .get();\r\n        console.log(nweets.docs.map(doc => doc.data()));\r\n    }\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    },[]);\r\n    const onSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n          await userObj.updateProfile({\r\n              displayName : newDisplayName,\r\n          });\r\n          refreshUser();\r\n        }\r\n    }\r\n    return (<div className=\"container\">\r\n    <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n              onChange={onChange}\r\n              type=\"text\"\r\n              autoFocus\r\n              placeholder=\"Display name\"\r\n              value={newDisplayName}\r\n              className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n              />\r\n            \r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n};","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nconst AuthForm = () =>{\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name,value}} = event;\r\n        if (name===\"email\"){\r\n            setEmail(value);\r\n        } else if (name===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    //기존으로 설정되면 새로고침이 실행되서 리액트가 전부 사라져버린다.\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            } else{\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n                \r\n            }\r\n            console.log(data)\r\n        } catch(error){\r\n            setError(error.message);\r\n            \r\n        }\r\n        \r\n    };\r\n    const toggleAccount = () => setNewAccount((prev)=> !prev)\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n            <input \r\n                name=\"email\" \r\n                type=\"text\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input \r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Password\"\r\n                required \r\n                value={password}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in\"}/>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span className=\"authSwitch\" onClick={toggleAccount}>{newAccount ? \"Sign in.\" : \"Create Account\"}</span>\r\n    </>)\r\n\r\n}\r\nexport default AuthForm","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst Auth =  () => {    \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n          } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n          provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n          provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n      };\r\n    return (\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n        </div>\r\n    </div>\r\n    );\r\n    }\r\n\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner})=> {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async() => {\r\n      const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n      if(ok){\r\n          await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n          await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n  };\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n  const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n        text: newNweet\r\n      });\r\n      setEditing(false);\r\n  }\r\n  const onChange = (event) => {\r\n      const {target: {value}}= event;\r\n      setNewNweet(value);\r\n  }\r\n  return(\r\n  <div className=\"nweet\">\r\n    {\r\n        editing ? (\r\n            <>\r\n            {isOwner && <><form onSubmit={onSubmit}className=\"container nweetEdit\"> \r\n              <input \r\n                type=\"text\"\r\n                placeholder=\"Edit your nweet\"\r\n                onChange={onChange} \r\n                autoFocus\r\n                value={newNweet} \r\n                className=\"formInput\"\r\n                required/>\r\n              <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span></>}\r\n            </>\r\n        ) : <>\r\n        <h4>{nweetObj.text}</h4>\r\n        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n        {isOwner && (\r\n       <div className=\"nweet__actions\">\r\n         <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n       </div>\r\n    )}\r\n    </>\r\n    }\r\n  </div>);\r\n};\r\nexport default Nweet;","import { dbService, storageService } from 'fbase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n          const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n          const response = await attachmentRef.putString(attachment, \"data_url\");\r\n          attachmentUrl = await response.ref.getDownloadURL();}\r\n        const nweetObj = {\r\n          text: nweet,\r\n          createdAt: Date.now(),\r\n          creatorId: userObj.uid,\r\n          attachmentUrl\r\n        }\r\n        \r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n      };\r\n      const onChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n      };\r\n      const onFileChange = (event) => {\r\n        const {target:{files}}=event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n          const{currentTarget:{result}} = finishedEvent;\r\n          setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n      }\r\n      const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n          <input\r\n           id=\"attach-file\"\r\n           type=\"file\"\r\n           accept=\"image/*\"\r\n           onChange={onFileChange}\r\n           style={{\r\n             opacity: 0,\r\n           }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n          )}\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\n\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n      dbService.collection(\"nweets\").onSnapshot(snapshot=>{\r\n          const nweetArray = snapshot.docs.map(doc => ({\r\n              id: doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray)\r\n      });\r\n    }, []);\r\n      return (\r\n        <div className=\"container\">\r\n          <NweetFactory userObj = {userObj}/>\r\n          <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet \r\n            key={nweet.id} \r\n            nweetObj={nweet} \r\n            isOwner={nweet.creatorId === userObj.uid } \r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Route,Switch} from \"react-router-dom\";\r\nimport Profile from 'routes/Profile';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter =  ({refreshUser,isLoggedIn, userObj}) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                 <div\r\n                 style={{\r\n                   maxWidth: 890,\r\n                   width: \"100%\",\r\n                   margin: \"0 auto\",\r\n                   marginTop: 80,\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                 }}\r\n               >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj}refreshUser={refreshUser}/>\r\n                </Route>\r\n                {/* \"/\"이 route에 있으면 상관 없지만 그 외의 route로 가게 되면 여기 '/'로 돌아가라는 의미 */}\r\n                {/* <Redirect from=\"*\" to=\"/\"/> */}\r\n                </div>\r\n                ) : (\r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Auth/>\r\n                </Route>\r\n                {/* <Redirect from=\"*\" to=\"/\"/> */}\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from 'fbase';\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=> {\n    authService.onAuthStateChanged((user)=> {\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args)=> user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n        setInit(true)\n      });\n  },[])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args)=> user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {init? <AppRouter refreshUser = {refreshUser}isLoggedIn={isLoggedIn} userObj={userObj}/> : 'Initializing'}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}